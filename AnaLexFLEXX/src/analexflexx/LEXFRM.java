/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package analexflexx;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author acer
 */
public class LEXFRM extends javax.swing.JFrame {

    /**
     * Creates new form LEXFRM
     */
    public LEXFRM() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTexto = new javax.swing.JTextField();
        btnAnalizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultados = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));

        txtTexto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTexto.setText("Escribe aquí");

        btnAnalizar.setBackground(new java.awt.Color(153, 255, 102));
        btnAnalizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAnalizar.setText("Analizar texto");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(btnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTexto)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnalizar)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));

        txtResultados.setColumns(20);
        txtResultados.setRows(5);
        jScrollPane1.setViewportView(txtResultados);

        jButton1.setBackground(new java.awt.Color(255, 255, 153));
        jButton1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton1.setText("VOLVER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 593, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        File archivo = new File("Alumno.txt");
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            escribir.print(txtTexto.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LEXFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Reader lector = new BufferedReader(new FileReader("Alumno.txt"));
            Lexer lexer = new Lexer(lector);
            String resultado = "TOKEN"+"\t\t"+"DESCRIPCION"+"\t\t"+"LEXEMA"+"\n";
            while(true){
                Tokens tokens = lexer.yylex();
                if(tokens == null){
                    resultado+="\n#";
                    txtResultados.setText(resultado);
                    return;
                }
                switch(tokens){
                    case ERROR:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "911 (EL SÍMBOLO NO EXISTE)"+ "\n";
                        break;
                    case Identificador: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "500"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case Variable: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "501"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case Comentario: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "502"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case LiteralNumeroEntero: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "512"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case LiteralNumeroReal: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "511"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case LiteralNumeroReal0: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "513"+"\t\t"+tokens+"\t\t"+"0"+lexer.lexeme+ "\n";
                        break;
                    case LiteralCaracter: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "520"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case LiteralCadena: 
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "530"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case Reservadas:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "400"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorIgual:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "200"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorSuma:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "201"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorResta:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "202"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorMultiplicacion:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "203"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorDivision:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "204"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorPotencia:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "205"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorRaiz:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "206"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorResiduo:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "207"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorLogico:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "208"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorRelacion:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "211"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case OperadorAsignacion:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "200"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    case Delimitador:
                        resultado+= "--------------------------------------------------------------------------------------------------------------"+"\n"+
                                "308"+"\t\t"+tokens+"\t\t"+lexer.lexeme+ "\n";
                        break;
                    default:
                        resultado+= "Token: "+ tokens + "\n";
                        break;
                
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LEXFRM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LEXFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Inicio vistaLEXMAN = new Inicio();
        vistaLEXMAN.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LEXFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LEXFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LEXFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LEXFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LEXFRM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtResultados;
    private javax.swing.JTextField txtTexto;
    // End of variables declaration//GEN-END:variables
}
